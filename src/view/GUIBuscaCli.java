/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Controller.ManipulaCliente;
import Model.Cliente;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kevin
 */
public class GUIBuscaCli extends javax.swing.JInternalFrame {

   DefaultTableModel dtm = new DefaultTableModel(
    new Object[][]{},
    new Object[]{"Código do Cliente","Nome do Cliente","Email","Idade","Telefone","Código do Produto Comprado"});
    
   
   
   
   
   public GUIBuscaCli() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBuscaCli = new javax.swing.JTextField();
        cmbTipoCli = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnBuscarCli = new javax.swing.JButton();
        btnSelecionarCli = new javax.swing.JButton();
        btnExcluirCli = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCliAlterar = new javax.swing.JTextField();
        btnSalvarCli = new javax.swing.JButton();
        btnLimparCli = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Buscar e Alterar Clientes");

        txtBuscaCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtBuscaCli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscaCliKeyReleased(evt);
            }
        });

        cmbTipoCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbTipoCli.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código do Cliente", "Nome do Cliente", "Email", "Idade", "Telefone", "Código do Produto Comprado" }));

        tblCliente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código do Cliente", "Nome do Cliente", "Email", "Idade", "Telefone", "Código do Produto Comprado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCliente);

        btnBuscarCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBuscarCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/buscar_button.png"))); // NOI18N
        btnBuscarCli.setText("BUSCAR");
        btnBuscarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCliActionPerformed(evt);
            }
        });

        btnSelecionarCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSelecionarCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/selecionar.png"))); // NOI18N
        btnSelecionarCli.setText("SELECIONAR");
        btnSelecionarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarCliActionPerformed(evt);
            }
        });

        btnExcluirCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnExcluirCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/excluir.png"))); // NOI18N
        btnExcluirCli.setText("EXCLUIR");
        btnExcluirCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCliActionPerformed(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Alterar Nome", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Nome do Cliente:");

        txtNomeCliAlterar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtNomeCliAlterar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeCliAlterarKeyReleased(evt);
            }
        });

        btnSalvarCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSalvarCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/salvar.png"))); // NOI18N
        btnSalvarCli.setText("Salvar Alterações");
        btnSalvarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCliActionPerformed(evt);
            }
        });

        btnLimparCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnLimparCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/limpar.png"))); // NOI18N
        btnLimparCli.setText("Limpar");
        btnLimparCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCliActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtNomeCliAlterar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnSalvarCli, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnLimparCli, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(btnSalvarCli, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimparCli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeCliAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeCliAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimparCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSelecionarCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExcluirCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtBuscaCli, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbTipoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscaCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTipoCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(btnBuscarCli, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSelecionarCli, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnExcluirCli, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCliActionPerformed
         try{
            buscarCli();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, 
                    "Erro ao buscar os dados\n"+e,
                    "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }//fecha o catch        /
    }//GEN-LAST:event_btnBuscarCliActionPerformed

    private void btnSelecionarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarCliActionPerformed
  selecionarValorCli();
    }//GEN-LAST:event_btnSelecionarCliActionPerformed

    private void btnExcluirCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCliActionPerformed
         excluir();
limparTabelaCli();
try{
buscarCli();
}catch(SQLException e){
    JOptionPane.showMessageDialog(rootPane, 
            "Erro ao excluir! Contate o Desenvolvedor\n"+e,
            "ERRO",
            JOptionPane.ERROR_MESSAGE);
}//fecha catch
    }//GEN-LAST:event_btnExcluirCliActionPerformed

    private void btnSalvarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCliActionPerformed
        alterarCli();
limparTabelaCli();
try{
    buscarCli();
    
}catch(SQLException e){
    JOptionPane.showMessageDialog(rootPane, 
                    "Erro ao alterar os dados\n"+e,
                    "ERRO",
                    JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btnSalvarCliActionPerformed

    private void btnLimparCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCliActionPerformed
        limpar();
    }//GEN-LAST:event_btnLimparCliActionPerformed

    private void txtBuscaCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaCliKeyReleased
        mudarTxt();
        limparTabelaCli();
        filtrarCli();
    }//GEN-LAST:event_txtBuscaCliKeyReleased

    private void txtNomeCliAlterarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeCliAlterarKeyReleased
mudarTxt3();        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeCliAlterarKeyReleased

    public void buscarCli() throws SQLException{
        try{
            ManipulaCliente mc = new ManipulaCliente();
            ArrayList<Cliente> alC = new ArrayList();
            alC = mc.buscarCli();
            for(int i=0; i<alC.size(); i++){
                dtm.addRow(new String[]{
                String.valueOf(alC.get(i).getCodCli()),    
                String.valueOf(alC.get(i).getNomeCli()),
                String.valueOf(alC.get(i).getEmail()),  
                String.valueOf(alC.get(i).getIdade()),   
                String.valueOf(alC.get(i).getTelefone()),   
                String.valueOf(alC.get(i).getCodProdCom())
            });
            
            }//Fecha for
            
           
            tblCliente.setModel(dtm);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, 
                    "Erro na tela de busca \n"+e,
                    "ERRO" ,
                    JOptionPane.ERROR_MESSAGE);
        }//fecha catch
    }//fecha metodo buscar()

    
    public void selecionarValorCli(){
       
        int linhaCli = tblCliente.getSelectedRow();
        
       
        if(linhaCli == -1){
            JOptionPane.showMessageDialog(rootPane, 
                    "Nenhuma linha selecionada",
                    "AVISO!",
                    JOptionPane.WARNING_MESSAGE);
        }else{
           
            String codCli = (String)tblCliente.getValueAt(linhaCli, 0);
            String nomeCli = (String)tblCliente.getValueAt(linhaCli, 1);
          
            txtNomeCliAlterar.setText(nomeCli);
        }
    }//Fecha o método selecionarValor()
    
    public void excluir(){
        try{
          int linhaCli = tblCliente.getSelectedRow();
        
        /*Se a linha tiver valor -1, significa que o usuário não 
        selecionou nada(Não clickou em nada)*/
        if(linhaCli == -1){
            JOptionPane.showMessageDialog(rootPane, 
                    "Nenhuma linha selecionada",
                    "AVISO!",
                    JOptionPane.WARNING_MESSAGE);
        }else{
            ManipulaCliente mc = new ManipulaCliente();
            String codCli = (String)tblCliente.getValueAt(linhaCli, 0);
            
           
           int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", "Exclusão", JOptionPane.YES_NO_OPTION);
           if(resposta == JOptionPane.YES_OPTION){
                mc.excluir(Integer.parseInt(codCli));
               JOptionPane.showMessageDialog(rootPane, 
                   "Excluído com Sucesso",
                   "EXCLUSÃO",
                   JOptionPane.INFORMATION_MESSAGE);
           }else if(resposta == JOptionPane.NO_OPTION) {
                  JOptionPane.showMessageDialog(rootPane, 
                   "Exclusão cancelada",
                   "EXCLUSÃO",
                   JOptionPane.INFORMATION_MESSAGE);
               
           }
           
        
        
        }//fecha else
                
                }catch(SQLException e){
                    JOptionPane.showMessageDialog(rootPane,
                            "Erro ao excluir \n"+e,
                            "ERRO",
                            JOptionPane.ERROR_MESSAGE);
                }
    }//Fecha método excluir
     
    
    public void limparTabelaCli(){
        dtm.setNumRows(0);
    }
    
    public void alterarCli(){
     try{
        Cliente cli = new Cliente();
  
        cli.setNomeCli(txtNomeCliAlterar.getText());
        
        ManipulaCliente mc = new ManipulaCliente();
        
        mc.alterarCli(cli);
         JOptionPane.showMessageDialog(rootPane,
                 "Alterado com sucesso",
                 "Sucesso",
                 JOptionPane.INFORMATION_MESSAGE);
        
        
     }   catch(SQLException e){
         JOptionPane.showMessageDialog(rootPane,
                 "Erro ao alterar \n" +e,
                 "Erro",
                 JOptionPane.ERROR_MESSAGE);
          
    }
     
    }
    
    public void limpar(){
       
        txtNomeCliAlterar.setText(null);
        txtBuscaCli.setText(null);
        txtBuscaCli.grabFocus();
        txtBuscaCli.setBackground(null);
       
        txtNomeCliAlterar.setBackground(null);
    }   
    
    public void filtrarCli(){
        try{
            if(txtBuscaCli.getText().isEmpty()){
                buscarCli();
            }else{
                ManipulaCliente mc = new ManipulaCliente();
                String pesquisa = cmbTipoCli.getSelectedItem().toString();
                String query = null;
                if(pesquisa.equals("Código do Cliente")){
                    query = "where codcli like '%"+txtBuscaCli.getText()+"%'";
                }else if(pesquisa.equals("Nome do Cliente")){
                    query = "where nomecli like '%"+txtBuscaCli.getText()+"%'";
                }else if(pesquisa.equals("Email")){
                    query = "where email like '%"+txtBuscaCli.getText()+"%'";
                    }else if(pesquisa.equals("Idade")){
                    query = "where idade like '%"+txtBuscaCli.getText()+"%'";
                    }else if(pesquisa.equals("Telefone")){
                    query = "where telefone like '%"+txtBuscaCli.getText()+"%'";
                }else{
                    query = "where codprod like '%"+txtBuscaCli.getText()+"%'";
                }//fecha else
            ArrayList<Cliente> alC = new ArrayList();
            alC = mc.filtrarClientes(query);
            for (int i = 0; i<alC.size(); i++) {
               dtm.addRow(new String[]{
                String.valueOf(alC.get(i).getCodCli()),alC.get(i).getNomeCli()
            }); 
            }
              tblCliente.setModel(dtm);
         
         }//fecha else
        
        }catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, 
                    "Erro ao filtrar\n" +e,
                    "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//Fecha o método filtrar
    
    public void mudarTxt(){
        txtBuscaCli.setBackground(Color.GREEN);
    }
 
    public void mudarTxt3(){
        txtNomeCliAlterar.setBackground(Color.GREEN);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCli;
    private javax.swing.JButton btnExcluirCli;
    private javax.swing.JButton btnLimparCli;
    private javax.swing.JButton btnSalvarCli;
    private javax.swing.JButton btnSelecionarCli;
    private javax.swing.JComboBox<String> cmbTipoCli;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtBuscaCli;
    private javax.swing.JTextField txtNomeCliAlterar;
    // End of variables declaration//GEN-END:variables
}
